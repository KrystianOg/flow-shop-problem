name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  WORKDIR: packages/fsp-gen

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: linux
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            suffix: windows
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: macos-aarch64
    defaults:
      run:
        working-directory: ${{ env.WORKDIR }}
    env:
      VERSION: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Install mingw on Windows target
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          sudo apt update
          sudo apt install -y mingw-w64

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifacts
        env:
          SUFFIX: ${{ matrix.suffix }}
        run: |
          mkdir -p dist
          if [[ "$SUFFIX" == "windows" ]]; then
            cp target/${{ matrix.target }}/release/fsp-gen.exe \
               dist/fsp-gen-${VERSION}-windows.exe
          else
            cp target/${{ matrix.target }}/release/fsp-gen \
               dist/fsp-gen-${VERSION}-$SUFFIX
          fi

      - name: Compress artifacts
        run: |
          cd dist
          if [[ "${{ matrix.suffix }}" == "windows" ]]; then
            zip fsp-gen-${VERSION}-windows.zip fsp-gen-${VERSION}-windows.exe
            rm fsp-gen-${VERSION}-windows.exe
          else
            tar -czvf fsp-gen-${VERSION}-${{ matrix.suffix }}.tar.gz \
              fsp-gen-${VERSION}-${{ matrix.suffix }}
            rm fsp-gen-${VERSION}-${{ matrix.suffix }}
          fi

      - run: ls dist
      - run: pwd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # Use a consistent short name so release can download by suffix
          name: ${{ matrix.suffix }}
          path: packages/fsp-gen/dist/*
          if-no-files-found: error

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      VERSION: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: dist

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: dist

      - name: Download macOS x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-x86_64
          path: dist

      - name: Download macOS aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-aarch64
          path: dist

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > SHA256SUMS.txt

      - run: ls

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
