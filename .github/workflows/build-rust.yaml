name: Release FSP Generator

on:
  push:
    tags:
      - "v*"

# elevate permissions for release
permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: linux
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            suffix: windows
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: macos-aarch64
    name: Build
    runs-on: ${{ matrix.os }}
    env:
      VERSION: ${{ github.ref_name }}
    defaults:
      run:
        working-directory: packages/fsp-gen

    steps:
      - name: Early skip MacOS on act
        if: env.ACT == 'true' && startsWith(matrix.os, 'macos')
        run: |
          echo "Skipping macOS build under act"
          exit 0

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install cross-compile tools (windows)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          sudo apt update 
          sudo apt install -y mingw-w64

      - name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifacts
        env:
          SUFFIX: ${{ matrix.suffix }}
        run: |
          echo "Building version $VERSION"

          mkdir -p dist
          ls target/${{matrix.target}}/release

          if [[ "$SUFFIX" == "windows" ]]; then
            cp target/${{ matrix.target }}/release/fsp-gen.exe \
              dist/fsp-gen-${VERSION}-windows.exe
          else 
            cp target/${{ matrix.target }}/release/fsp-gen \
              dist/fsp-gen-${VERSION}-$SUFFIX
          fi

      - name: Compress artifacts
        run: |
          cd dist
          if [[ "${{ matrix.suffix }}" == "windows" ]]; then
            zip fsp-gen-${VERSION}-windows.zip \
              fsp-gen-${VERSION}-windows.exe
            rm fsp-gen-${VERSION}-windows.exe
          else 
            tar -czvf fsp-gen-${VERSION}-${{ matrix.suffix }}.tar.gz \
              fsp-gen-${VERSION}-${{ matrix.suffix }}
            rm fsp-gen-${VERSION}-${{ matrix.suffix }}
          fi

      - name: Install sha256sum on MacOS
        if: matrix.os == 'macos-latest'
        run: brew install coreutils

      - name: Generate SHA256 checksums
        run: |
          cd dist
          sha256sum * > SHA256SUMS.txt

      - name: List dist folder
        run: |
          ls -lh dist/

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
